#############################
# INSTALL NODE.JS FOR ARM6L #
#############################

- name: "Download and extract Node.js {{ nodejs_version }}"
  when: ansible_facts["architecture"] == "arm6l"
  ansible.builtin.unarchive:
    src: "https://unofficial-builds.nodejs.org/download/release/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-armv6l.tar.xz"
    dest: "{{ source_dir }}"
    remote_src: true
    creates: "{{ source_dir }}/node-v{{ nodejs_version }}-linux-armv6l"

- name: Copy Node.js to /usr/local
  when: ansible_facts["architecture"] == "arm6l"
  become: true
  ansible.builtin.shell: "cp -a {{ source_dir }}/node-v{{ nodejs_version }}-linux-armv6l/* /usr/local"
  args:
    creates: /usr/local/bin/node


##############################
# INSTALL NODE.JS FOR ARMV7L #
##############################

- name: "Download and extract Node.js {{ nodejs_version }}"
  when: ansible_facts["architecture"] == "armv7l"
  ansible.builtin.unarchive:
    src: "https://nodejs.org/dist/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-armv7l.tar.xz"
    dest: "{{ source_dir }}"
    remote_src: true
    creates: "{{ source_dir }}/node-v{{ nodejs_version }}-linux-armv7l"

- name: Copy Node.js to /usr/local
  when: ansible_facts["architecture"] == "armv7l"
  become: true
  ansible.builtin.shell: "cp -a {{ source_dir }}/node-v{{ nodejs_version }}-linux-armv7l/* /usr/local"
  args:
    creates: /usr/local/bin/node
